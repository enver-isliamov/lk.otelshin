import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { useToast } from '@/hooks/use-toast';

export const TelegramWebhookSetup = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<any>(null);
  const { toast } = useToast();

  const setupWebhook = async () => {
    console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Telegram webhook...');
    setIsLoading(true);
    setResult(null);

    try {
      const response = await fetch(
        'https://tzkehqpiyzddzvnwxhez.supabase.co/functions/v1/telegram-webhook-setup',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          }
        }
      );

      console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);

      const data = await response.json();
      console.log('üì• –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', JSON.stringify(data, null, 2));
      
      setResult(data);

      if (data.success) {
        toast({
          title: "–£—Å–ø–µ—à–Ω–æ!",
          description: "Telegram webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        });
      } else {
        toast({
          title: "–û—à–∏–±–∫–∞",
          description: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å webhook: ${data.error}`,
          variant: "destructive"
        });
      }

    } catch (error) {
      console.error('üí• –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="p-6 border border-border rounded-lg space-y-4">
      <h3 className="text-lg font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Webhook</h3>
      
      <Button
        onClick={setupWebhook}
        disabled={isLoading}
        className="w-full"
      >
        {isLoading ? (
          <>
            <div className="animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2" />
            –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook...
          </>
        ) : (
          '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram Webhook'
        )}
      </Button>

      {result && (
        <div className="mt-4 p-4 bg-muted rounded-lg">
          <h4 className="font-medium mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç:</h4>
          <pre className="text-sm overflow-auto">
            {JSON.stringify(result, null, 2)}
          </pre>
        </div>
      )}

      <div className="text-sm text-muted-foreground">
        <p><strong>–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</strong></p>
        <ol className="list-decimal list-inside space-y-1 mt-2">
          <li>Telegram webhook –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é telegram-bot</li>
          <li>–ë–æ—Ç –Ω–∞—á–Ω–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
          <li>–ü—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start —Å sessionId –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Google Sheets</li>
          <li>–§—É–Ω–∫—Ü–∏—è check-auth –Ω–∞–π–¥–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
        </ol>
      </div>
    </div>
  );
};