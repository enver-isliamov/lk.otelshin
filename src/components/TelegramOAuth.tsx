
import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { useToast } from '@/hooks/use-toast';
import { supabase } from '@/integrations/supabase/client';

interface TelegramOAuthProps {
  onSuccess: () => void;
}

export const TelegramOAuth = ({ onSuccess }: TelegramOAuthProps) => {
  const [isLoading, setIsLoading] = useState(false);
  const [sessionId, setSessionId] = useState<string>('');
  const { toast } = useToast();

  const handleTelegramAuth = () => {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ Telegram')
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π sessionId
    const newSessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    console.log('üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω sessionId:', newSessionId);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º sessionId –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    setSessionId(newSessionId);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º sessionId
    const botUrl = `https://t.me/ShiniSimfBot?start=${newSessionId}`;
    
    toast({
      title: "–ü–µ—Ä–µ—Ö–æ–¥ –∫ –±–æ—Ç—É",
      description: "–°–µ–π—á–∞—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è Telegram –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    });
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–æ—Ç–∞ –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    window.open(botUrl, '_blank');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    startAuthPolling(newSessionId);
  };

  const startAuthPolling = (sessionId: string) => {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è sessionId:', sessionId);
    setIsLoading(true);
    
    let pollCount = 0;
    const maxPolls = 300; // 5 –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    
    const pollInterval = setInterval(async () => {
      pollCount++;
      
      try {
        console.log(`üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ #${pollCount}/${maxPolls} –¥–ª—è sessionId:`, sessionId);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç check-auth —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        const checkUrl = `https://tzkehqpiyzddzvnwxhez.supabase.co/functions/v1/check-auth?session=${sessionId}`;
        console.log('üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞:', checkUrl);
        
        const response = await fetch(checkUrl, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
          }
        });

        console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status, response.statusText);

        if (!response.ok) {
          const errorText = await response.text();
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ check-auth:', {
            status: response.status,
            statusText: response.statusText,
            error: errorText
          });
          return;
        }

        const data = await response.json();
        console.log('üì• –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', JSON.stringify(data, null, 2));

        if (data.authorized && data.user) {
          console.log('‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê! –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', JSON.stringify(data.user, null, 2));
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
          const profileData = {
            id: data.user.chat_id || sessionId,
            name: data.user.client_name || data.user.userName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            phone: data.user.phone || '',
            chat_id: data.user.chat_id || '',
            is_admin: data.user.is_admin || false,
            address: data.user.client_address || '',
            car_number: data.user.car_number || ''
          };

          console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ localStorage:', JSON.stringify(profileData, null, 2));
          localStorage.setItem('userProfile', JSON.stringify(profileData));
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
          const savedProfile = localStorage.getItem('userProfile');
          console.log('‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', savedProfile ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞');
          
          clearInterval(pollInterval);
          setIsLoading(false);
          
          toast({
            title: "–£—Å–ø–µ—à–Ω–æ!",
            description: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${profileData.name}!`
          });
          
          console.log('üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...');
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
          onSuccess();
        } else if (pollCount >= maxPolls) {
          // –í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ
          console.log('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫–ª–æ');
          clearInterval(pollInterval);
          setIsLoading(false);
          
          toast({
            title: "–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ",
            description: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å–Ω–æ–≤–∞",
            variant: "destructive"
          });
        }
      } catch (error) {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', {
          error: error.message,
          stack: error.stack,
          pollCount,
          maxPolls,
          sessionId
        });
        
        if (pollCount >= maxPolls) {
          console.log('‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏');
          clearInterval(pollInterval);
          setIsLoading(false);
          
          toast({
            title: "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
            description: "–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            variant: "destructive"
          });
        }
      }
    }, 1000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  };

  return (
    <div className="space-y-4">
      <Button
        onClick={handleTelegramAuth}
        disabled={isLoading}
        className="w-full bg-gradient-to-r from-[#0088cc] to-[#229ED9] hover:from-[#007bb8] hover:to-[#1a8cc4] text-white text-lg py-6 shadow-lg"
      >
        {isLoading ? (
          <>
            <div className="animate-spin w-4 h-4 border-2 border-white border-t-transparent rounded-full mr-2" />
            –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...
          </>
        ) : (
          <>
            <svg className="w-5 h-5 mr-3" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 0C5.376 0 0 5.376 0 12s5.376 12 12 12 12-5.376 12-12S18.624 0 12 0zm5.568 8.16c-.180 1.896-.96 6.504-1.356 8.628-.168.9-.504 1.2-.816 1.236-.696.06-1.224-.456-1.896-.9-1.056-.696-1.656-1.128-2.676-1.8-1.188-.78-.42-1.212.264-1.908.18-.18 3.252-2.976 3.312-3.228a.24.24 0 0 0-.06-.216c-.072-.06-.168-.036-.252-.024-.108.024-1.788 1.14-5.064 3.348-.48.336-.912.504-1.296.492-.432-.012-1.248-.24-1.86-.444-.756-.252-1.344-.384-1.296-.804.024-.216.324-.432.888-.66 3.504-1.524 5.832-2.532 6.996-3.012 3.336-1.392 4.02-1.632 4.476-1.632.096 0 .324.024.468.144.12.096.156.228.168.324-.012.048-.012.132-.012.204z"/>
            </svg>
            –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
          </>
        )}
      </Button>
      
      {isLoading && (
        <div className="text-center">
          <p className="text-sm text-gray-600">
            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ Telegram –±–æ—Ç–µ
          </p>
          <p className="text-xs text-gray-500 mt-1">
            –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã...
          </p>
        </div>
      )}
    </div>
  );
};
