
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
export const normalizePhone = (phone: string): string => {
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ-—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
  const digits = phone.replace(/\D/g, '');
  console.log('üîß –¶–∏—Ñ—Ä—ã –∏–∑ –Ω–æ–º–µ—Ä–∞:', digits);
  
  // –†–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤
  if (digits.startsWith('8') && digits.length === 11) {
    return `+7${digits.slice(1)}`;
  }
  if (digits.startsWith('7') && digits.length === 11) {
    return `+${digits}`;
  }
  if (digits.length === 10) {
    return `+7${digits}`;
  }
  
  return phone; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å
};

// –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
export const createPhoneVariants = (phone: string): string[] => {
  const normalizedPhone = normalizePhone(phone);
  
  const phoneVariants = [
    phone.trim(), // –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç (—Å trim)
    normalizedPhone, // –ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    phone.replace(/\D/g, ''), // –¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    phone.replace(/[\s\-\(\)]/g, ''), // –ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∫–æ–±–æ–∫
    phone.replace(/\+/g, ''), // –ë–µ–∑ –ø–ª—é—Å–∞
  ];

  // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
  return [...new Set(phoneVariants)];
};
