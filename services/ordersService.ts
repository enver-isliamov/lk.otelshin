
import { supabase } from '@/integrations/supabase/client';
import { TireOrder } from '@/types/auth';

export class OrdersService {
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Google Sheets —á–µ—Ä–µ–∑ Edge Function
  static async getOrdersFromGoogleSheets(phone: string, chatId: string): Promise<{ data: TireOrder[] | null; error: any }> {
    console.log('üìä –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –∏–∑ Google Sheets –¥–ª—è:', { phone, chatId });

    try {
      // –í—ã–∑—ã–≤–∞–µ–º Edge Function –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Google Sheets
      const { data, error } = await supabase.functions.invoke('google-sheets-orders', {
        body: { 
          action: 'get_orders',
          phone: phone.trim(),
          chatId: chatId.trim()
        }
      });

      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', error);
        return { data: null, error };
      }

      if (data && data.success) {
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∑–∞–∫–∞–∑—ã –∏–∑ Google Sheets:', data.orders?.length || 0);
        return { data: data.orders || [], error: null };
      }

      if (data && data.error === 'PHONE_CHATID_MISMATCH') {
        console.log('‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ ChatID');
        return { 
          data: null, 
          error: { 
            message: data.message,
            type: 'PHONE_CHATID_MISMATCH'
          }
        };
      }

      console.log('‚ùå –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ Google Sheets');
      return { data: [], error: null };

    } catch (error) {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Google Sheets:', error);
      return { 
        data: null, 
        error: { 
          message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Google –¢–∞–±–ª–∏—Ü—ã',
          type: 'CRITICAL_ERROR'
        }
      };
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö)
  static async getAllOrdersForAdmin(): Promise<{ data: TireOrder[] | null; error: any }> {
    console.log('üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞–∫–∞–∑—ã');
    
    // –î–ª—è –∞–¥–º–∏–Ω–∞ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ —Ç–µ –∂–µ –¥–∞–Ω–Ω—ã–µ
    // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∞–¥–º–∏–Ω –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ Google Sheets
    try {
      const { data, error } = await supabase.functions.invoke('google-sheets-orders', {
        body: { 
          action: 'get_all_orders_admin',
          phone: '',
          chatId: ''
        }
      });

      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞:', error);
        return { data: null, error };
      }

      return { data: data?.orders || [], error: null };

    } catch (error) {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞:', error);
      return { 
        data: null, 
        error: { 
          message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'
        }
      };
    }
  }
}
